{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["sha3512","data","SHA3","update","digest","calculateKey","clearKey","hash","key","slice","iv","encrypt","name","chacha20","Buffer","from","b32encode","mark","buffer","Uint8Array","byteLength","sha","reverseStart","parseInt","reverseLength","rounds","i","set","reverse","b32","encode","type","lc","window","b32en","b32de","decode","toString","replace","enc","dec","ciphertext","decrypt","c20","cK","App","props","state","domain","base32","hex","_App","clear","bind","recalculate","decryptBase32","decryptHex","this","load","localStorage","getItem","length","setState","setItem","text","REVERSE_MARK_BITS","padded","l","pad","saveKey","saveDomain","c","includes","split","what","full","navigator","clipboard","writeText","className","onChange","e","updateKey","currentTarget","value","updateDomain","onClick","copy","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd0e09c5.chunk.js","sourcesContent":["import React from 'react'\nimport { Buffer } from 'buffer/'\nimport { SHA3 } from 'sha3'\nimport b32 from 'base32.js'\nimport chacha20 from 'chacha20'\nimport 'milligram'\nimport './App.css'\n\n\nfunction sha3512(data) {\n\treturn new SHA3(512).update(data).digest()\n}\n\nfunction calculateKey(clearKey) {\n\tlet hash = sha3512(clearKey)\n\treturn {\n\t\tkey: hash.slice(24, 56),\n\t\tiv: hash.slice(12, 24)\n\t}\n}\n\nfunction encrypt(clearKey, name) {\n\tlet {key, iv} = calculateKey(clearKey)\n\treturn chacha20.encrypt(key, iv, Buffer.from(name))\n}\n\nfunction decrypt(clearKey, ciphertext) {\n\tlet {key, iv} = calculateKey(clearKey)\n\treturn chacha20.decrypt(key, iv, Buffer.from(ciphertext)).toString()\n}\n\nconst\tREVERSE_MARK_BITS = 8,\n\t\tREVERSE_SHIFT = 5,\n\t\tMAX_REVERSE_START = 2 ^ (REVERSE_MARK_BITS - REVERSE_SHIFT),\n\t\tMAX_REVERSE_LENGTH = 2 ^ REVERSE_SHIFT\nfunction b32encode(data) {\n\tdata = Buffer.from(data)\n\tlet buffer = new Uint8Array(data.byteLength + 1),\n\t\tsha = sha3512(data),\n\t\treverseStart = (parseInt((sha[0] << 8) + sha[1], 16) % MAX_REVERSE_START) % data.byteLength,\n\t\treverseLength = (parseInt((sha[2] << 8) + sha[3], 16) % MAX_REVERSE_LENGTH) % (data.byteLength - reverseStart),\n\t\tmark,\n\t\trounds = mark = (reverseStart << REVERSE_SHIFT) + reverseLength\n\tfor(let i = 0; i < rounds; i++) {\n\t\tdata.set(data.slice(reverseStart, reverseStart + reverseLength).reverse(), reverseStart)\n\t\tdata = data.reverse()\n\t}\n\tbuffer.set(data, 0)\n\tbuffer.set([mark], buffer.byteLength - 1)\n\treturn b32.encode(buffer, { type: 'crockford', lc: true })\n}\nwindow.sha = sha3512\nwindow.b32en = b32encode\nwindow.b32de = b32decode\nwindow.b32 = b32\nwindow.enc = encrypt\nwindow.dec = decrypt\nwindow.c20 = chacha20\nwindow.cK = calculateKey\nwindow.Buffer = Buffer\n\nfunction b32decode(data) {\n\tlet buffer = Buffer.from(b32.decode(data, { type: 'crockford' })),\n\t\trounds,\n\t\tmark = rounds = buffer[buffer.byteLength - 1],\n\t\treverseStart = mark >> REVERSE_SHIFT,\n\t\treverseLength = mark & MAX_REVERSE_LENGTH\n\tbuffer = buffer.slice(0, buffer.byteLength - 1)\n\tfor(let i = 0; i < rounds; i++) {\n\t\tbuffer = buffer.reverse()\n\t\tbuffer.set(buffer.slice(reverseStart, reverseStart + reverseLength).reverse(), reverseStart)\n\t}\n\treturn buffer.toString().replace(/\\0/g, '')\n}\n\nfunction pad(text) {\n\tlet byteLength = Buffer.from(text).byteLength + REVERSE_MARK_BITS / 8, /* consider reverse mark */\n\t\tpadded = text + ''\n\tfor(let l = 5;; l += 5) {\n\t\tif(byteLength < l) {\n\t\t\tfor(let i = byteLength; i < l; i++) {\n\t\t\t\tpadded += '\\0'\n\t\t\t}\n\t\t\treturn padded\n\t\t}\n\t}\n}\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tkey: '',\n\t\t\tdomain: '',\n\t\t\tname: '',\n\t\t\tbase32: '',\n\t\t\thex: ''\n\t\t}\n\t\twindow._App = this\n\t\tthis.clear = this.clear.bind(this)\n\t\tthis.recalculate = this.recalculate.bind(this)\n\t\tthis.decryptBase32 = this.decryptBase32.bind(this)\n\t\tthis.decryptHex = this.decryptHex.bind(this)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.load()\n\t}\n\n\n\tload() {\n\t\tlet key = localStorage.getItem('key')\n\t\tif(typeof key === 'string' && key.length !== 0) {\n\t\t\tthis.setState({ key })\n\t\t}\n\t\tlet domain = localStorage.getItem('domain')\n\t\tif(typeof domain === 'string' && domain.length !== 0) {\n\t\t\tthis.setState({ domain })\n\t\t}\n\t}\n\n\tsaveKey(key) {\n\t\tlocalStorage.setItem('key', key)\n\t}\n\n\tsaveDomain(domain) {\n\t\tlocalStorage.setItem('domain', domain)\n\t}\n\n\trecalculate(name, key) {\n\t\tlet ciphertext = encrypt(key || this.state.key, pad(name))\n\t\tthis.setState({\n\t\t\tname,\n\t\t\tbase32: b32encode(ciphertext),\n\t\t\thex: ciphertext.toString('hex')\n\t\t})\n\t}\n\n\tupdateKey(key) {\n\t\tthis.setState({ key })\n\t\tthis.saveKey(key)\n\t}\n\n\tupdateDomain(domain) {\n\t\tthis.saveDomain(domain)\n\t\tthis.setState({ domain })\n\t}\n\n\tdecryptBase32(c) {\n\t\tc = c + ''\n\t\tif(c.includes('@')) {\n\t\t\tc = c.split('@')[0]\n\t\t}\n\t}\n\n\n\tdecryptHex(c) {}\n\n\tcopy(what, full) {\n\t\tnavigator.clipboard.writeText(this.state[what] + (full ? '@' + this.state.domain : ''))\n\t}\n\n\tclear() {\n\t\tthis.setState({\n\t\t\tname: '',\n\t\t\tbase32: '',\n\t\t\thex: ''\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<hr/>\n\t\t\t\t<h2>Generate email addresses unrecognizable by providers</h2>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<label className=\"\">key</label>\n\t\t\t\t\t\t<input onChange={e => {this.updateKey(e.currentTarget.value); this.recalculate(this.state.name, e.currentTarget.value)} } value={this.state.key}></input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column float-right\">\n\t\t\t\t\t\t<label className=\"\">domain</label>\n\t\t\t\t\t\t<input onChange={e => this.updateDomain(e.currentTarget.value)} value={this.state.domain}></input>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t<label className=\"\">name</label>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button onClick={() => this.copy('name') } className=\"button\">copy</button>\n\t\t\t\t\t\t<button onClick={this.clear} className=\"button button-clear\">clear</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input onChange={e => this.recalculate(e.currentTarget.value)} value={this.state.name}></input>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t<label className=\"\">base32</label>\n\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t<button onClick={() => this.copy('base32')} className=\"button\">copy</button>\n\t\t\t\t\t\t<button onClick={() => this.copy('base32', true)} className=\"button button-outline\">copy full addr</button>\n\t\t\t\t\t<button onClick={this.clear} className=\"button button-clear\">clear</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input onChange={e => this.decryptBase32(e.currentTarget.value)} value={this.state.base32 + (this.state.domain ? '@' + this.state.domain : '')}></input>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t<label className=\"\">hex</label>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button onClick={() => this.copy('hex')} className=\"button\">copy</button>\n\t\t\t\t\t\t<button onClick={() => this.copy('hex', true)} className=\"button button-outline\">copy full addr</button>\n\t\t\t\t\t\t<button onClick={this.clear} className=\"button button-clear\">clear</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input onChange={e => this.decryptHex(e.currentTarget.value)} value={this.state.hex + (this.state.domain ? '@' + this.state.domain : '')}></input>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry)\n\t\t\tgetFID(onPerfEntry)\n\t\t\tgetFCP(onPerfEntry)\n\t\t\tgetLCP(onPerfEntry)\n\t\t\tgetTTFB(onPerfEntry)\n\t\t})\n\t}\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'sanitize.css'\nimport 'sanitize.css/forms.css'\nimport 'sanitize.css/typography.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}